import{_ as e,c as o,o as l,a3 as i}from"./chunks/framework.B6OY9LYM.js";const c="/assets/image.DEck2viM.png",S=JSON.parse('{"title":"CSS 笔记","description":"","frontmatter":{},"headers":[],"relativePath":"basics/CSS/index.md","filePath":"basics/CSS/index.md","lastUpdated":1747235418000}'),d={name:"basics/CSS/index.md"},s=i('<h1 id="css-笔记" tabindex="-1">CSS 笔记 <a class="header-anchor" href="#css-笔记" aria-label="Permalink to &quot;CSS 笔记&quot;">​</a></h1><h2 id="_1-css-简介" tabindex="-1">1. CSS 简介 <a class="header-anchor" href="#_1-css-简介" aria-label="Permalink to &quot;1. CSS 简介&quot;">​</a></h2><p>CSS（层叠样式表）是一种用于描述 HTML 文档外观的样式表语言。它使得开发者能够控制网页的布局、颜色和字体等视觉效果。</p><h2 id="_2-css-选择器" tabindex="-1">2. CSS 选择器 <a class="header-anchor" href="#_2-css-选择器" aria-label="Permalink to &quot;2. CSS 选择器&quot;">​</a></h2><p>选择器用于选择要应用样式的 HTML 元素。常见的选择器包括：</p><ul><li><strong>元素选择器</strong>：选择所有指定类型的元素，例如 <code>p</code> 选择所有段落。</li><li><strong>类选择器</strong>：选择具有特定类的元素，例如 <code>.className</code>。</li><li><strong>ID 选择器</strong>：选择具有特定 ID 的元素，例如 <code>#idName</code>。</li><li><strong>属性选择器</strong>：选择具有特定属性的元素，例如 <code>[type=&quot;text&quot;]</code>。</li><li><strong>分组选择器</strong>：选择多个元素，例如 <code>div, p</code>。</li><li><strong>通配符选择器</strong>：选择所有元素，例如 <code>*</code>。</li><li><strong>伪类选择器</strong>：选择特定状态的元素，例如 <code>:hover</code>、<code>:active</code></li><li><strong>伪元素选择器</strong>：选择特定伪元素的元素，例如 <code>::before</code>、<code>::after</code></li><li><strong>组合选择器</strong>：选择多个选择器组合在一起的元素，例如 <code>div p</code></li><li><strong>子选择器</strong>：选择父元素下的子元素，例如 <code>div &gt; p</code></li><li><strong>兄弟选择器</strong> ：选择相邻的元素，例如 <code>,</code>。</li></ul><h2 id="_3-css-属性" tabindex="-1">3. CSS 属性 <a class="header-anchor" href="#_3-css-属性" aria-label="Permalink to &quot;3. CSS 属性&quot;">​</a></h2><p>CSS 属性用于设置元素的样式。常见的属性包括：</p><ul><li><strong>颜色</strong>：<code>color</code>、<code>background-color</code></li><li><strong>字体</strong>：<code>font-size</code>、<code>font-family</code></li><li><strong>边距和填充</strong>：<code>margin</code>、<code>padding</code></li><li><strong>边框</strong>：<code>border</code></li></ul><h2 id="_4-css-布局" tabindex="-1">4. CSS 布局 <a class="header-anchor" href="#_4-css-布局" aria-label="Permalink to &quot;4. CSS 布局&quot;">​</a></h2><p>CSS 提供多种布局方式，包括：</p><ul><li><strong>盒模型</strong>：理解元素的宽度、高度、边距、填充和边框。</li><li><strong>浮动布局</strong>：使用 <code>float</code> 属性来实现元素的并排布局。</li><li><strong>弹性布局</strong>：使用 <code>display: flex</code> 来创建响应式布局。</li><li><strong>网格布局</strong>：使用 <code>display: grid</code> 来创建复杂的布局。</li><li><strong>响应式设计</strong>：使用媒体查询来适配不同的屏幕尺寸。</li></ul><h3 id="_4-1-flex-布局" tabindex="-1">4.1 flex 布局 <a class="header-anchor" href="#_4-1-flex-布局" aria-label="Permalink to &quot;4.1 flex 布局&quot;">​</a></h3><ul><li><strong>应用在 flex container 上的 css 属性</strong><ul><li><code>flex-direction</code> ：设置 flex 元素的排列方向 <ul><li><code>row</code>：默认值，从左到右排列</li><li><code>row-reverse</code>：从右到左排列</li><li><code>column</code>：从上到下排列</li><li><code>column-reverse</code>：从下到上排列</li></ul></li><li><code>flex-flow</code> : 设置 flex-direction 和 flex-wrap 的简写属性</li><li><code>flex-wrap</code> : 设置 flex 元素的换行方式 <ul><li><code>nowrap</code>：默认值，不换行</li><li><code>wrap</code>：换行，从上到下排列</li><li><code>wrap-reverse</code>：换行，从下到上排列`</li><li><code>justify-content</code> : 设置设置 flex 元素的水平对齐方式 <ul><li><code>flex-start</code>：默认值，从左到右排列</li><li><code>flex-end</code>：从右到左排列</li><li><code>center</code>：居中对齐</li><li><code>space-between</code>：两端对齐，项目之间的间隔都相等</li><li><code>space-around</code>：两端对齐，项目之间的间隔都相等，但项目之间的间隔比两端的间隔大一倍</li><li><code>space-evenly</code>：两端对齐，项目之间的间隔都相等，但项目之间的间隔比两端的间隔大一倍</li></ul></li><li><code>align-items</code> : 设置设置 flex 元素的垂直对齐方式</li><li><code>align-content</code> : 设置设置 flex 元素的垂直对齐方式</li></ul></li></ul></li><li><strong>应用在 flex items 上的 css 属性</strong><ul><li><code>order</code> : 设置 flex 元素的排序方式</li><li><code>flex-grow</code> : 设置 flex 元素的扩展比例 设置任意非负数字默认值是 0</li><li><code>flex-shrink</code> : 设置 flex 元素的收缩比例 设置任意非负数字默认值是 1</li><li><code>flex-basis</code> : 设置 flex 元素的初始大小 基础尺寸</li><li><code>flex</code> : 设置 flex-grow、flex-shrink 和 flex-basis 的简写属性</li><li><code>flex-grow flex-shrink flex-basis</code> 值为 none 0 0 auto 值为 auto 1 1 auto 值为 1</li><li><code>align-self</code> : 设置 flex 元素的垂直对齐方式 布局问题 <img src="'+c+'" alt="alt text"></li></ul></li></ul>',14),t=[s];function r(a,n,g,f,x,u){return l(),o("div",null,t)}const _=e(d,[["render",r]]);export{S as __pageData,_ as default};
