import{_ as i,c as e,o as a,a3 as s}from"./chunks/framework.Bd41z3wI.js";const k=JSON.parse('{"title":"如何访问VitePress站点","description":"","frontmatter":{},"headers":[],"relativePath":"HOW_TO_ACCESS.md","filePath":"HOW_TO_ACCESS.md","lastUpdated":1747242916000}'),l={name:"HOW_TO_ACCESS.md"},t=s('<h1 id="如何访问vitepress站点" tabindex="-1">如何访问VitePress站点 <a class="header-anchor" href="#如何访问vitepress站点" aria-label="Permalink to &quot;如何访问VitePress站点&quot;">​</a></h1><p>本文档提供了几种让他人访问您的VitePress站点的方法。</p><h2 id="方法一-通过github-pages访问-推荐" tabindex="-1">方法一：通过GitHub Pages访问（推荐） <a class="header-anchor" href="#方法一-通过github-pages访问-推荐" aria-label="Permalink to &quot;方法一：通过GitHub Pages访问（推荐）&quot;">​</a></h2><p>本仓库已配置GitHub Actions工作流程，可自动部署到GitHub Pages。</p><ol><li><p>确保在GitHub仓库设置中启用了GitHub Pages:</p><ul><li>进入仓库 -&gt; Settings -&gt; Pages</li><li>Source选择&quot;GitHub Actions&quot;</li></ul></li><li><p>每次推送到master分支后，工作流程会自动运行并部署站点</p></li><li><p>部署后，站点将可通过以下地址访问：</p><ul><li>https://[你的GitHub用户名].github.io/docs/</li></ul></li></ol><h2 id="方法二-本地预览并分享" tabindex="-1">方法二：本地预览并分享 <a class="header-anchor" href="#方法二-本地预览并分享" aria-label="Permalink to &quot;方法二：本地预览并分享&quot;">​</a></h2><p>如果您想快速让局域网内的其他人访问：</p><ol><li><p>运行以下命令启动预览服务器：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:preview</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --host</span></span></code></pre></div></li><li><p>服务器会显示一个本地IP地址，局域网内的其他设备可以通过该IP访问您的站点</p></li></ol><h2 id="方法三-部署到其他托管服务" tabindex="-1">方法三：部署到其他托管服务 <a class="header-anchor" href="#方法三-部署到其他托管服务" aria-label="Permalink to &quot;方法三：部署到其他托管服务&quot;">​</a></h2><p>您也可以将构建好的站点部署到其他托管服务：</p><ol><li><p>构建站点：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span></code></pre></div></li><li><p>构建后的文件位于<code>docs</code>目录</p></li><li><p>将该目录部署到您选择的托管服务：</p><ul><li>Netlify</li><li>Vercel</li><li>Cloudflare Pages</li><li>任何支持静态网站托管的服务</li></ul></li></ol><h2 id="方法四-使用netlify或vercel一键部署" tabindex="-1">方法四：使用Netlify或Vercel一键部署 <a class="header-anchor" href="#方法四-使用netlify或vercel一键部署" aria-label="Permalink to &quot;方法四：使用Netlify或Vercel一键部署&quot;">​</a></h2><p>这些平台支持直接从GitHub仓库部署：</p><ol><li>在Netlify或Vercel注册并连接您的GitHub账户</li><li>导入此仓库</li><li>构建命令设置为：<code>npm run docs:build</code></li><li>输出目录设置为：<code>docs</code></li><li>点击部署按钮</li></ol><p>这些平台会自动为您的站点分配一个域名，您也可以设置自定义域名。</p>',15),p=[t];function o(n,h,r,d,c,u){return a(),e("div",null,p)}const g=i(l,[["render",o]]);export{k as __pageData,g as default};
